{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/landscape/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1526547537000},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1526547537000},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1526547537000},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1526547537000},{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":1526547537000},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1526547537000},{"_id":"source/_posts/Jade入门学习.md","hash":"488230f7a01149152386e3ea9111d761200ca1e9","modified":1526559009000},{"_id":"source/_posts/Mobro-my-blog.md","hash":"5fdd775373586754ecc28a3b863dd85734282584","modified":1526555632000},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1526547537000},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1526547537000},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1526547537000},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1526547537000},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1526547537000},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1526547537000},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1526547537000},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1526547537000},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1526547537000},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1526547537000},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1526547537000},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1526547537000},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1526547537000},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1526547537000},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1526547537000},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1526547537000},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1526547537000},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1526547537000},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1526547537000},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1526547537000},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1526547537000},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1526547537000},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1526547537000},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1526547537000},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1526547537000},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1526547537000},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1526547537000},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1526547537000},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":1526547537000},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1526547537000},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1526547537000},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1526547537000},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1526547537000},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1526547537000},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1526547537000},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1526547537000},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1526547537000},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1526547537000},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1526547538000},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1526547538000},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1526547538000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1526547538000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1526547538000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1526547538000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1526547538000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1526547538000},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1526547538000},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1526547538000},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1526547538000},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1526547537000},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1526547537000},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1526547537000},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1526547537000},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1526547537000},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1526547537000},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1526547537000},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1526547537000},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1526547537000},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1526547537000},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1526547537000},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1526547537000},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1526547537000},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1526547537000},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1526547537000},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1526547537000},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1526547537000},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1526547537000},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1526547538000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1526547538000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1526547538000},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1526547538000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1526547538000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1526547538000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1526547538000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1526547538000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1526547538000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1526547538000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1526547538000},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1526547538000},{"_id":"public/2018/05/17/Mobro-my-blog/index.html","hash":"328579fcf63efea052fdf12827ea7eef80e99dc4","modified":1526559016404},{"_id":"public/archives/index.html","hash":"f6b7fecc84ffaff98cb59a7acf63e184290fd4cb","modified":1526559016430},{"_id":"public/archives/2018/index.html","hash":"95bfcb8c83c07e46b32416697f4f09b16d45af7c","modified":1526559016432},{"_id":"public/archives/2018/05/index.html","hash":"17760987885d93fda31ecd1234e79400235e29a5","modified":1526559016432},{"_id":"public/tags/mobro-啦啦/index.html","hash":"5025f09f27071d02adb368ff897a1463b39f9f5d","modified":1526559016433},{"_id":"public/index.html","hash":"7a8e4338e4766b168933aead13feca9ea25c014d","modified":1526559016433},{"_id":"public/tags/前端-jade/index.html","hash":"5466b46663821a6c8ffbe8bd21d15a3bef5b155f","modified":1526559016436},{"_id":"public/2018/05/17/Jade入门学习/index.html","hash":"b05e687e8ad9a24df437814afb9989b7c96a096d","modified":1526559016436},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1526559016441},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1526559016441},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1526559016441},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1526559016441},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1526559016441},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1526559016441},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1526559016441},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1526559016441},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1526559016442},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1526559016442},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1526559017133},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1526559017138},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1526559017138},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1526559017138},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1526559017138},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1526559017139},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1526559017139},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1526559017139},{"_id":"public/css/style.css","hash":"5f8dadd37d0052c557061018fe6f568f64fced9b","modified":1526559017139},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1526559017141},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1526559017141},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1526559017143},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1526559017163}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Jade入门学习","date":"2018-05-17T12:09:31.000Z","_content":"# **jade**:\njade是超高性能的node JavaScript模板引擎，有着非常强大的API和大量杰出的特性。它主要针对node的服务端。由于商标的原因，改为Pug，哈巴狗。Pug有它本身的缺点——可移植性差，调试困难，性能并不出色，但使用它可以加快开发效率。  \n## 标签嵌套\n使用缩进来表示标签间的嵌套关系，这样可以构建一个 HTML 代码的 __树状结构__ 语法  \n``` html\nul\n    li item A\n    li item B\n```\n为了节省空间， Pug 嵌套标签提供了一种 __内联式__ 语法\n``` html\na: img\n```   \nPug知道哪些元素是自闭合的，为了语法的完整性，也可以通过在标签后加上 / 来明确声明此标签是 __自闭合__ 的\n``` html\nimg\nimg/\ninput \ninput/\n```\nHTML5的 __DOCTYPE__ 书写如下\n``` html\ndoctype html\n```\n当然，也可以自定义一个 doctype 字面值。\n``` html\ndoctype html PUBLIC \"-//W3C//DTD XHTML Basic 1.1//EN\"\n```\n## 内容\nPug 提供了三种常用的方式来放置内容  \n+ 【管道文本】  \n  这是最简单的向模板添加纯文本的方法。只需要在每行前面加一个 | 字符，这个字符在类 Unix 系统下常用作“管道”功能，因此得名  \n``` html\n| 纯文本当然也可以包括 <strong>HTML</strong> 内容。\np\n  | 但它必须单独起一行。\n```\n+ 【标签内文本】\n这实际上是最常见的情况，文本只需要和标签名隔开一个空格即可.\n``` html\np 纯文本 <strong>HTML</strong> 内容\n```\n+ 【嵌入大段文本】\n有时可能想要写一个大段文本块。比如嵌入脚本或者样式。只需在标签后面接一个 .即可。 注意： 不能有空格  \n``` jade\nscript.\n    if (usingPug)\n        console.log('请用Pug')\n    else \n        console.log('傻不拉几')\n```\n\n## 属性\n> 1. 标签属性和 HTML 语法非常相似，它们的值就是普通的 JavaScript 表达式。可以用逗号作为属性分隔符，也可以不加逗号\n> 2. 如果有很多属性，可以把它们分几行写\n> 3. 如果有一个很长的属性，并且JavaScript运行时引擎支持ES2015模板字符串，可以使用它来写属性值\n\n``` jade\n// 1. \na(href='baidu.com') 百度\n= '\\n'\na(class='button' href='baidu.com') 百度\n= '\\n'\na(class='button', href='baidu.com') 百度\n\n// 2. \ninput(\n  type='checkbox'\n  name='agreement'\n  checked\n)\n\n// 3. \ninput(data-json=`\n  {\n    \"非常\": \"长的\",\n    \"数据\": true\n  }\n`)\n\n```\n> 4. 默认情况下，所有的属性都经过转义（即把特殊字符转换成转义序列）来防止诸如跨站脚本攻击之类的攻击方式。如果要使用特殊符号，需要使用 != 而不是 =  \n\n注意： 未经转义的缓存代码十分危险。必须正确处理和过滤用户的输入来避免跨站脚本攻击\n``` jade\ndiv(escaped=\"<code>\")\ndiv(unescaped!=\"<code>\")\n```\n> 5. 在Pug中，布尔值属性是经过映射的，这样布尔值(true和false)就能接受了。没有指定值时，默认是true\n\n``` jade\ninput(type='checkbox' checked)\n= '\\n'\ninput(type='checkbox' checked=true)\n= '\\n'\ninput(type='checkbox' checked=false)\n= '\\n'\ninput(type='checkbox' checked=true.toString())\n```\n> 6. style（样式）属性可以是一个字符串（就像其他普通的属性一样）还可以是一个对象\n\n``` jade\na(style={color: 'red', background: 'green'})\n```\n\n> 7. 标签嵌入\n\n#[标签名(标签属性)  标签内容]  \n> 8. 空格调整  \nPug 默认会去除一个标签前后的所有空格，而标签嵌入功能可以在需要嵌入的位置上处理前后空格\n\n``` jade\np\n  | 如果我不用嵌入功能来书写，一些标签比如\n  strong strong\n  | 和\n  em em\n  | 可能会产生意外的结果。\np.\n  如果用了嵌入，在 #[strong strong] 和 #[em em] 旁的空格就会让我舒服多了。\n```\n效果，前者strong前后无空格，后者有空格。（啦strong啦啦，啦 strong 啦）\n\n> 9. 注释\n``` jade \n// 注释\n//- 注释不输出，即不会出现在结果中\n// \n    块注释\n    继续写块注释\n```\n\nps： 所有以 < 开头的行都会被当作纯文本，因此直接写一个 HTML 风格的条件注释也是没问题的\n``` jade\n<!--[if IE 8]>\n<html lang=\"en\" class=\"lt-ie9\">\n<![endif]-->\n<!--[if gt IE 8]><!-->\n<html lang=\"en\">\n<!--<![endif]-->\n```\n> 10. 使用=或#{}来进行变量的真实值替换  \n在 #{ 和 } 里面的代码也会被求值、转义，并最终嵌入到模板的渲染输出中.Pug 足够聪明来分辨到底哪里才是嵌入表达式的结束，所以不用担心表达式中有 }，也不需要额外的转义;使用!{}嵌入没有转义的文本进入模板中\n\n## 变量\n变量来源有三种，分别是pug文件内部、命令行参数和外部JSON文件。\n``` jade\n// 文件内部\n-var val = \"aaaa\";\np= val\n\n// 命令行\npug test.pug -P -w --obj '{val: \"fldasj\"}'\n\n// 外部json文件\npug test.pug -P -w -O test.json\n```\n\n## include\n包含（include）功能允许把另外的文件内容插入进来,被包含的如果不是 Pug 文件，那么就只会当作文本内容来引入 \n``` jade\n//- index.pug\ndoctype html\nhtml\n  include includes/head.pug\n  body\n    h1 我的网站\n    p 欢迎来到我这简陋得不能再简陋的网站。\n    include includes/foot.pug\n\n//- includes/head.pug\nhead\n  title 我的网站\n  script(src='/javascripts/jquery.js')\n  script(src='/javascripts/app.js')\n  \n//- includes/foot.pug\nfooter#footer\n  p Copyright (c) foobar\n```\n\n## 继承\nPug 支持使用 block 和 extends 关键字进行模板的继承。一个称之为“块”（block）的代码块，可以被子模板覆盖、替换。这个过程是递归的。   \n``` jade\n复制代码\n//- layout.pug\nhtml\n  head\n　　 meta(charset=\"UTF-8\")\n    title 我的站点 - #{title}\n    block scripts\n      script(src='/jquery.js')\n  body\n    block content\n    block foot\n      #footer\n        p 一些页脚的内容\n\n//- page-a.pug\nextends layout.pug\n\nblock scripts\n  script(src='/jquery.js')\n  script(src='/pets.js')\n\nblock content\n  h1= title\n  - var pets = ['猫', '狗']\n  each petName in pets\n    include pet.pug\n\n//- pet.pug\np= petName  // 或者 p #{petName}\n```  \n\n值得注意的是，因为这里的 foot 块 没有 被重定义，所以会依然输出“一些页脚的内容”  \n\n## 扩展\nPug 允许去替换（默认的行为）、prepend（向头部添加内容），或者 append（向尾部添加内容）一个块。\n\n\n\n\n\n\n\n\n\n\n**`参考文献：`**   [jade](https://www.cnblogs.com/xiaohuochai/p/7222227.html)\n","source":"_posts/Jade入门学习.md","raw":"---\ntitle: Jade入门学习\ndate: 2018-05-17 20:09:31\ntags: 前端 jade\n---\n# **jade**:\njade是超高性能的node JavaScript模板引擎，有着非常强大的API和大量杰出的特性。它主要针对node的服务端。由于商标的原因，改为Pug，哈巴狗。Pug有它本身的缺点——可移植性差，调试困难，性能并不出色，但使用它可以加快开发效率。  \n## 标签嵌套\n使用缩进来表示标签间的嵌套关系，这样可以构建一个 HTML 代码的 __树状结构__ 语法  \n``` html\nul\n    li item A\n    li item B\n```\n为了节省空间， Pug 嵌套标签提供了一种 __内联式__ 语法\n``` html\na: img\n```   \nPug知道哪些元素是自闭合的，为了语法的完整性，也可以通过在标签后加上 / 来明确声明此标签是 __自闭合__ 的\n``` html\nimg\nimg/\ninput \ninput/\n```\nHTML5的 __DOCTYPE__ 书写如下\n``` html\ndoctype html\n```\n当然，也可以自定义一个 doctype 字面值。\n``` html\ndoctype html PUBLIC \"-//W3C//DTD XHTML Basic 1.1//EN\"\n```\n## 内容\nPug 提供了三种常用的方式来放置内容  \n+ 【管道文本】  \n  这是最简单的向模板添加纯文本的方法。只需要在每行前面加一个 | 字符，这个字符在类 Unix 系统下常用作“管道”功能，因此得名  \n``` html\n| 纯文本当然也可以包括 <strong>HTML</strong> 内容。\np\n  | 但它必须单独起一行。\n```\n+ 【标签内文本】\n这实际上是最常见的情况，文本只需要和标签名隔开一个空格即可.\n``` html\np 纯文本 <strong>HTML</strong> 内容\n```\n+ 【嵌入大段文本】\n有时可能想要写一个大段文本块。比如嵌入脚本或者样式。只需在标签后面接一个 .即可。 注意： 不能有空格  \n``` jade\nscript.\n    if (usingPug)\n        console.log('请用Pug')\n    else \n        console.log('傻不拉几')\n```\n\n## 属性\n> 1. 标签属性和 HTML 语法非常相似，它们的值就是普通的 JavaScript 表达式。可以用逗号作为属性分隔符，也可以不加逗号\n> 2. 如果有很多属性，可以把它们分几行写\n> 3. 如果有一个很长的属性，并且JavaScript运行时引擎支持ES2015模板字符串，可以使用它来写属性值\n\n``` jade\n// 1. \na(href='baidu.com') 百度\n= '\\n'\na(class='button' href='baidu.com') 百度\n= '\\n'\na(class='button', href='baidu.com') 百度\n\n// 2. \ninput(\n  type='checkbox'\n  name='agreement'\n  checked\n)\n\n// 3. \ninput(data-json=`\n  {\n    \"非常\": \"长的\",\n    \"数据\": true\n  }\n`)\n\n```\n> 4. 默认情况下，所有的属性都经过转义（即把特殊字符转换成转义序列）来防止诸如跨站脚本攻击之类的攻击方式。如果要使用特殊符号，需要使用 != 而不是 =  \n\n注意： 未经转义的缓存代码十分危险。必须正确处理和过滤用户的输入来避免跨站脚本攻击\n``` jade\ndiv(escaped=\"<code>\")\ndiv(unescaped!=\"<code>\")\n```\n> 5. 在Pug中，布尔值属性是经过映射的，这样布尔值(true和false)就能接受了。没有指定值时，默认是true\n\n``` jade\ninput(type='checkbox' checked)\n= '\\n'\ninput(type='checkbox' checked=true)\n= '\\n'\ninput(type='checkbox' checked=false)\n= '\\n'\ninput(type='checkbox' checked=true.toString())\n```\n> 6. style（样式）属性可以是一个字符串（就像其他普通的属性一样）还可以是一个对象\n\n``` jade\na(style={color: 'red', background: 'green'})\n```\n\n> 7. 标签嵌入\n\n#[标签名(标签属性)  标签内容]  \n> 8. 空格调整  \nPug 默认会去除一个标签前后的所有空格，而标签嵌入功能可以在需要嵌入的位置上处理前后空格\n\n``` jade\np\n  | 如果我不用嵌入功能来书写，一些标签比如\n  strong strong\n  | 和\n  em em\n  | 可能会产生意外的结果。\np.\n  如果用了嵌入，在 #[strong strong] 和 #[em em] 旁的空格就会让我舒服多了。\n```\n效果，前者strong前后无空格，后者有空格。（啦strong啦啦，啦 strong 啦）\n\n> 9. 注释\n``` jade \n// 注释\n//- 注释不输出，即不会出现在结果中\n// \n    块注释\n    继续写块注释\n```\n\nps： 所有以 < 开头的行都会被当作纯文本，因此直接写一个 HTML 风格的条件注释也是没问题的\n``` jade\n<!--[if IE 8]>\n<html lang=\"en\" class=\"lt-ie9\">\n<![endif]-->\n<!--[if gt IE 8]><!-->\n<html lang=\"en\">\n<!--<![endif]-->\n```\n> 10. 使用=或#{}来进行变量的真实值替换  \n在 #{ 和 } 里面的代码也会被求值、转义，并最终嵌入到模板的渲染输出中.Pug 足够聪明来分辨到底哪里才是嵌入表达式的结束，所以不用担心表达式中有 }，也不需要额外的转义;使用!{}嵌入没有转义的文本进入模板中\n\n## 变量\n变量来源有三种，分别是pug文件内部、命令行参数和外部JSON文件。\n``` jade\n// 文件内部\n-var val = \"aaaa\";\np= val\n\n// 命令行\npug test.pug -P -w --obj '{val: \"fldasj\"}'\n\n// 外部json文件\npug test.pug -P -w -O test.json\n```\n\n## include\n包含（include）功能允许把另外的文件内容插入进来,被包含的如果不是 Pug 文件，那么就只会当作文本内容来引入 \n``` jade\n//- index.pug\ndoctype html\nhtml\n  include includes/head.pug\n  body\n    h1 我的网站\n    p 欢迎来到我这简陋得不能再简陋的网站。\n    include includes/foot.pug\n\n//- includes/head.pug\nhead\n  title 我的网站\n  script(src='/javascripts/jquery.js')\n  script(src='/javascripts/app.js')\n  \n//- includes/foot.pug\nfooter#footer\n  p Copyright (c) foobar\n```\n\n## 继承\nPug 支持使用 block 和 extends 关键字进行模板的继承。一个称之为“块”（block）的代码块，可以被子模板覆盖、替换。这个过程是递归的。   \n``` jade\n复制代码\n//- layout.pug\nhtml\n  head\n　　 meta(charset=\"UTF-8\")\n    title 我的站点 - #{title}\n    block scripts\n      script(src='/jquery.js')\n  body\n    block content\n    block foot\n      #footer\n        p 一些页脚的内容\n\n//- page-a.pug\nextends layout.pug\n\nblock scripts\n  script(src='/jquery.js')\n  script(src='/pets.js')\n\nblock content\n  h1= title\n  - var pets = ['猫', '狗']\n  each petName in pets\n    include pet.pug\n\n//- pet.pug\np= petName  // 或者 p #{petName}\n```  \n\n值得注意的是，因为这里的 foot 块 没有 被重定义，所以会依然输出“一些页脚的内容”  \n\n## 扩展\nPug 允许去替换（默认的行为）、prepend（向头部添加内容），或者 append（向尾部添加内容）一个块。\n\n\n\n\n\n\n\n\n\n\n**`参考文献：`**   [jade](https://www.cnblogs.com/xiaohuochai/p/7222227.html)\n","slug":"Jade入门学习","published":1,"updated":"2018-05-17T12:10:09.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhahtndy0000h7s6ghszo14x","content":"<h1 id=\"jade\"><a href=\"#jade\" class=\"headerlink\" title=\"jade:\"></a><strong>jade</strong>:</h1><p>jade是超高性能的node JavaScript模板引擎，有着非常强大的API和大量杰出的特性。它主要针对node的服务端。由于商标的原因，改为Pug，哈巴狗。Pug有它本身的缺点——可移植性差，调试困难，性能并不出色，但使用它可以加快开发效率。  </p>\n<h2 id=\"标签嵌套\"><a href=\"#标签嵌套\" class=\"headerlink\" title=\"标签嵌套\"></a>标签嵌套</h2><p>使用缩进来表示标签间的嵌套关系，这样可以构建一个 HTML 代码的 <strong>树状结构</strong> 语法<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ul</span><br><span class=\"line\">    li item A</span><br><span class=\"line\">    li item B</span><br></pre></td></tr></table></figure></p>\n<p>为了节省空间， Pug 嵌套标签提供了一种 <strong>内联式</strong> 语法<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a: img</span><br><span class=\"line\">```   </span><br><span class=\"line\">Pug知道哪些元素是自闭合的，为了语法的完整性，也可以通过在标签后加上 / 来明确声明此标签是 __自闭合__ 的</span><br><span class=\"line\">``` html</span><br><span class=\"line\">img</span><br><span class=\"line\">img/</span><br><span class=\"line\">input </span><br><span class=\"line\">input/</span><br></pre></td></tr></table></figure></p>\n<p>HTML5的 <strong>DOCTYPE</strong> 书写如下<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">doctype html</span><br></pre></td></tr></table></figure></p>\n<p>当然，也可以自定义一个 doctype 字面值。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">doctype html PUBLIC \"-//W3C//DTD XHTML Basic 1.1//EN\"</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"内容\"><a href=\"#内容\" class=\"headerlink\" title=\"内容\"></a>内容</h2><p>Pug 提供了三种常用的方式来放置内容  </p>\n<ul>\n<li><p>【管道文本】<br>这是最简单的向模板添加纯文本的方法。只需要在每行前面加一个 | 字符，这个字符在类 Unix 系统下常用作“管道”功能，因此得名  </p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">| 纯文本当然也可以包括 <span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span>HTML<span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span> 内容。</span><br><span class=\"line\">p</span><br><span class=\"line\">  | 但它必须单独起一行。</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>【标签内文本】<br>这实际上是最常见的情况，文本只需要和标签名隔开一个空格即可.</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p 纯文本 <span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span>HTML<span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span> 内容</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>【嵌入大段文本】<br>有时可能想要写一个大段文本块。比如嵌入脚本或者样式。只需在标签后面接一个 .即可。 注意： 不能有空格  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">script.</span><br><span class=\"line\">    if (usingPug)</span><br><span class=\"line\">        console.log(&apos;请用Pug&apos;)</span><br><span class=\"line\">    else </span><br><span class=\"line\">        console.log(&apos;傻不拉几&apos;)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"属性\"><a href=\"#属性\" class=\"headerlink\" title=\"属性\"></a>属性</h2><blockquote>\n<ol>\n<li>标签属性和 HTML 语法非常相似，它们的值就是普通的 JavaScript 表达式。可以用逗号作为属性分隔符，也可以不加逗号</li>\n<li>如果有很多属性，可以把它们分几行写</li>\n<li>如果有一个很长的属性，并且JavaScript运行时引擎支持ES2015模板字符串，可以使用它来写属性值</li>\n</ol>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 1. </span><br><span class=\"line\">a(href=&apos;baidu.com&apos;) 百度</span><br><span class=\"line\">= &apos;\\n&apos;</span><br><span class=\"line\">a(class=&apos;button&apos; href=&apos;baidu.com&apos;) 百度</span><br><span class=\"line\">= &apos;\\n&apos;</span><br><span class=\"line\">a(class=&apos;button&apos;, href=&apos;baidu.com&apos;) 百度</span><br><span class=\"line\"></span><br><span class=\"line\">// 2. </span><br><span class=\"line\">input(</span><br><span class=\"line\">  type=&apos;checkbox&apos;</span><br><span class=\"line\">  name=&apos;agreement&apos;</span><br><span class=\"line\">  checked</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">// 3. </span><br><span class=\"line\">input(data-json=`</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;非常&quot;: &quot;长的&quot;,</span><br><span class=\"line\">    &quot;数据&quot;: true</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">`)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<ol start=\"4\">\n<li>默认情况下，所有的属性都经过转义（即把特殊字符转换成转义序列）来防止诸如跨站脚本攻击之类的攻击方式。如果要使用特殊符号，需要使用 != 而不是 =  </li>\n</ol>\n</blockquote>\n<p>注意： 未经转义的缓存代码十分危险。必须正确处理和过滤用户的输入来避免跨站脚本攻击<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div(escaped=&quot;&lt;code&gt;&quot;)</span><br><span class=\"line\">div(unescaped!=&quot;&lt;code&gt;&quot;)</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<ol start=\"5\">\n<li>在Pug中，布尔值属性是经过映射的，这样布尔值(true和false)就能接受了。没有指定值时，默认是true</li>\n</ol>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">input(type=&apos;checkbox&apos; checked)</span><br><span class=\"line\">= &apos;\\n&apos;</span><br><span class=\"line\">input(type=&apos;checkbox&apos; checked=true)</span><br><span class=\"line\">= &apos;\\n&apos;</span><br><span class=\"line\">input(type=&apos;checkbox&apos; checked=false)</span><br><span class=\"line\">= &apos;\\n&apos;</span><br><span class=\"line\">input(type=&apos;checkbox&apos; checked=true.toString())</span><br></pre></td></tr></table></figure>\n<blockquote>\n<ol start=\"6\">\n<li>style（样式）属性可以是一个字符串（就像其他普通的属性一样）还可以是一个对象</li>\n</ol>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a(style=&#123;color: &apos;red&apos;, background: &apos;green&apos;&#125;)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<ol start=\"7\">\n<li>标签嵌入</li>\n</ol>\n</blockquote>\n<p>#[标签名(标签属性)  标签内容]  </p>\n<blockquote>\n<ol start=\"8\">\n<li>空格调整<br>Pug 默认会去除一个标签前后的所有空格，而标签嵌入功能可以在需要嵌入的位置上处理前后空格</li>\n</ol>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p</span><br><span class=\"line\">  | 如果我不用嵌入功能来书写，一些标签比如</span><br><span class=\"line\">  strong strong</span><br><span class=\"line\">  | 和</span><br><span class=\"line\">  em em</span><br><span class=\"line\">  | 可能会产生意外的结果。</span><br><span class=\"line\">p.</span><br><span class=\"line\">  如果用了嵌入，在 #[strong strong] 和 #[em em] 旁的空格就会让我舒服多了。</span><br></pre></td></tr></table></figure>\n<p>效果，前者strong前后无空格，后者有空格。（啦strong啦啦，啦 strong 啦）</p>\n<blockquote>\n<ol start=\"9\">\n<li>注释<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 注释</span><br><span class=\"line\">//- 注释不输出，即不会出现在结果中</span><br><span class=\"line\">// </span><br><span class=\"line\">    块注释</span><br><span class=\"line\">    继续写块注释</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</blockquote>\n<p>ps： 所有以 &lt; 开头的行都会被当作纯文本，因此直接写一个 HTML 风格的条件注释也是没问题的<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--[if IE 8]&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en&quot; class=&quot;lt-ie9&quot;&gt;</span><br><span class=\"line\">&lt;![endif]--&gt;</span><br><span class=\"line\">&lt;!--[if gt IE 8]&gt;&lt;!--&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;!--&lt;![endif]--&gt;</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<ol start=\"10\">\n<li>使用=或#{}来进行变量的真实值替换<br>在 #{ 和 } 里面的代码也会被求值、转义，并最终嵌入到模板的渲染输出中.Pug 足够聪明来分辨到底哪里才是嵌入表达式的结束，所以不用担心表达式中有 }，也不需要额外的转义;使用!{}嵌入没有转义的文本进入模板中</li>\n</ol>\n</blockquote>\n<h2 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h2><p>变量来源有三种，分别是pug文件内部、命令行参数和外部JSON文件。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 文件内部</span><br><span class=\"line\">-var val = &quot;aaaa&quot;;</span><br><span class=\"line\">p= val</span><br><span class=\"line\"></span><br><span class=\"line\">// 命令行</span><br><span class=\"line\">pug test.pug -P -w --obj &apos;&#123;val: &quot;fldasj&quot;&#125;&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">// 外部json文件</span><br><span class=\"line\">pug test.pug -P -w -O test.json</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"include\"><a href=\"#include\" class=\"headerlink\" title=\"include\"></a>include</h2><p>包含（include）功能允许把另外的文件内容插入进来,被包含的如果不是 Pug 文件，那么就只会当作文本内容来引入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//- index.pug</span><br><span class=\"line\">doctype html</span><br><span class=\"line\">html</span><br><span class=\"line\">  include includes/head.pug</span><br><span class=\"line\">  body</span><br><span class=\"line\">    h1 我的网站</span><br><span class=\"line\">    p 欢迎来到我这简陋得不能再简陋的网站。</span><br><span class=\"line\">    include includes/foot.pug</span><br><span class=\"line\"></span><br><span class=\"line\">//- includes/head.pug</span><br><span class=\"line\">head</span><br><span class=\"line\">  title 我的网站</span><br><span class=\"line\">  script(src=&apos;/javascripts/jquery.js&apos;)</span><br><span class=\"line\">  script(src=&apos;/javascripts/app.js&apos;)</span><br><span class=\"line\">  </span><br><span class=\"line\">//- includes/foot.pug</span><br><span class=\"line\">footer#footer</span><br><span class=\"line\">  p Copyright (c) foobar</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"继承\"><a href=\"#继承\" class=\"headerlink\" title=\"继承\"></a>继承</h2><p>Pug 支持使用 block 和 extends 关键字进行模板的继承。一个称之为“块”（block）的代码块，可以被子模板覆盖、替换。这个过程是递归的。   </p>\n<pre><code class=\"jade\">复制代码\n//- layout.pug\nhtml\n  head\n　　 meta(charset=&quot;UTF-8&quot;)\n    title 我的站点 - #{title}\n    block scripts\n      script(src=&apos;/jquery.js&apos;)\n  body\n    block content\n    block foot\n      #footer\n        p 一些页脚的内容\n\n//- page-a.pug\nextends layout.pug\n\nblock scripts\n  script(src=&apos;/jquery.js&apos;)\n  script(src=&apos;/pets.js&apos;)\n\nblock content\n  h1= title\n  - var pets = [&apos;猫&apos;, &apos;狗&apos;]\n  each petName in pets\n    include pet.pug\n\n//- pet.pug\np= petName  // 或者 p #{petName}\n</code></pre>\n<p>值得注意的是，因为这里的 foot 块 没有 被重定义，所以会依然输出“一些页脚的内容”  </p>\n<h2 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"扩展\"></a>扩展</h2><p>Pug 允许去替换（默认的行为）、prepend（向头部添加内容），或者 append（向尾部添加内容）一个块。</p>\n<p><strong><code>参考文献：</code></strong>   <a href=\"https://www.cnblogs.com/xiaohuochai/p/7222227.html\" target=\"_blank\" rel=\"noopener\">jade</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"jade\"><a href=\"#jade\" class=\"headerlink\" title=\"jade:\"></a><strong>jade</strong>:</h1><p>jade是超高性能的node JavaScript模板引擎，有着非常强大的API和大量杰出的特性。它主要针对node的服务端。由于商标的原因，改为Pug，哈巴狗。Pug有它本身的缺点——可移植性差，调试困难，性能并不出色，但使用它可以加快开发效率。  </p>\n<h2 id=\"标签嵌套\"><a href=\"#标签嵌套\" class=\"headerlink\" title=\"标签嵌套\"></a>标签嵌套</h2><p>使用缩进来表示标签间的嵌套关系，这样可以构建一个 HTML 代码的 <strong>树状结构</strong> 语法<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ul</span><br><span class=\"line\">    li item A</span><br><span class=\"line\">    li item B</span><br></pre></td></tr></table></figure></p>\n<p>为了节省空间， Pug 嵌套标签提供了一种 <strong>内联式</strong> 语法<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a: img</span><br><span class=\"line\">```   </span><br><span class=\"line\">Pug知道哪些元素是自闭合的，为了语法的完整性，也可以通过在标签后加上 / 来明确声明此标签是 __自闭合__ 的</span><br><span class=\"line\">``` html</span><br><span class=\"line\">img</span><br><span class=\"line\">img/</span><br><span class=\"line\">input </span><br><span class=\"line\">input/</span><br></pre></td></tr></table></figure></p>\n<p>HTML5的 <strong>DOCTYPE</strong> 书写如下<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">doctype html</span><br></pre></td></tr></table></figure></p>\n<p>当然，也可以自定义一个 doctype 字面值。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">doctype html PUBLIC \"-//W3C//DTD XHTML Basic 1.1//EN\"</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"内容\"><a href=\"#内容\" class=\"headerlink\" title=\"内容\"></a>内容</h2><p>Pug 提供了三种常用的方式来放置内容  </p>\n<ul>\n<li><p>【管道文本】<br>这是最简单的向模板添加纯文本的方法。只需要在每行前面加一个 | 字符，这个字符在类 Unix 系统下常用作“管道”功能，因此得名  </p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">| 纯文本当然也可以包括 <span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span>HTML<span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span> 内容。</span><br><span class=\"line\">p</span><br><span class=\"line\">  | 但它必须单独起一行。</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>【标签内文本】<br>这实际上是最常见的情况，文本只需要和标签名隔开一个空格即可.</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p 纯文本 <span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span>HTML<span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span> 内容</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>【嵌入大段文本】<br>有时可能想要写一个大段文本块。比如嵌入脚本或者样式。只需在标签后面接一个 .即可。 注意： 不能有空格  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">script.</span><br><span class=\"line\">    if (usingPug)</span><br><span class=\"line\">        console.log(&apos;请用Pug&apos;)</span><br><span class=\"line\">    else </span><br><span class=\"line\">        console.log(&apos;傻不拉几&apos;)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"属性\"><a href=\"#属性\" class=\"headerlink\" title=\"属性\"></a>属性</h2><blockquote>\n<ol>\n<li>标签属性和 HTML 语法非常相似，它们的值就是普通的 JavaScript 表达式。可以用逗号作为属性分隔符，也可以不加逗号</li>\n<li>如果有很多属性，可以把它们分几行写</li>\n<li>如果有一个很长的属性，并且JavaScript运行时引擎支持ES2015模板字符串，可以使用它来写属性值</li>\n</ol>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 1. </span><br><span class=\"line\">a(href=&apos;baidu.com&apos;) 百度</span><br><span class=\"line\">= &apos;\\n&apos;</span><br><span class=\"line\">a(class=&apos;button&apos; href=&apos;baidu.com&apos;) 百度</span><br><span class=\"line\">= &apos;\\n&apos;</span><br><span class=\"line\">a(class=&apos;button&apos;, href=&apos;baidu.com&apos;) 百度</span><br><span class=\"line\"></span><br><span class=\"line\">// 2. </span><br><span class=\"line\">input(</span><br><span class=\"line\">  type=&apos;checkbox&apos;</span><br><span class=\"line\">  name=&apos;agreement&apos;</span><br><span class=\"line\">  checked</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">// 3. </span><br><span class=\"line\">input(data-json=`</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;非常&quot;: &quot;长的&quot;,</span><br><span class=\"line\">    &quot;数据&quot;: true</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">`)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<ol start=\"4\">\n<li>默认情况下，所有的属性都经过转义（即把特殊字符转换成转义序列）来防止诸如跨站脚本攻击之类的攻击方式。如果要使用特殊符号，需要使用 != 而不是 =  </li>\n</ol>\n</blockquote>\n<p>注意： 未经转义的缓存代码十分危险。必须正确处理和过滤用户的输入来避免跨站脚本攻击<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div(escaped=&quot;&lt;code&gt;&quot;)</span><br><span class=\"line\">div(unescaped!=&quot;&lt;code&gt;&quot;)</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<ol start=\"5\">\n<li>在Pug中，布尔值属性是经过映射的，这样布尔值(true和false)就能接受了。没有指定值时，默认是true</li>\n</ol>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">input(type=&apos;checkbox&apos; checked)</span><br><span class=\"line\">= &apos;\\n&apos;</span><br><span class=\"line\">input(type=&apos;checkbox&apos; checked=true)</span><br><span class=\"line\">= &apos;\\n&apos;</span><br><span class=\"line\">input(type=&apos;checkbox&apos; checked=false)</span><br><span class=\"line\">= &apos;\\n&apos;</span><br><span class=\"line\">input(type=&apos;checkbox&apos; checked=true.toString())</span><br></pre></td></tr></table></figure>\n<blockquote>\n<ol start=\"6\">\n<li>style（样式）属性可以是一个字符串（就像其他普通的属性一样）还可以是一个对象</li>\n</ol>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a(style=&#123;color: &apos;red&apos;, background: &apos;green&apos;&#125;)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<ol start=\"7\">\n<li>标签嵌入</li>\n</ol>\n</blockquote>\n<p>#[标签名(标签属性)  标签内容]  </p>\n<blockquote>\n<ol start=\"8\">\n<li>空格调整<br>Pug 默认会去除一个标签前后的所有空格，而标签嵌入功能可以在需要嵌入的位置上处理前后空格</li>\n</ol>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p</span><br><span class=\"line\">  | 如果我不用嵌入功能来书写，一些标签比如</span><br><span class=\"line\">  strong strong</span><br><span class=\"line\">  | 和</span><br><span class=\"line\">  em em</span><br><span class=\"line\">  | 可能会产生意外的结果。</span><br><span class=\"line\">p.</span><br><span class=\"line\">  如果用了嵌入，在 #[strong strong] 和 #[em em] 旁的空格就会让我舒服多了。</span><br></pre></td></tr></table></figure>\n<p>效果，前者strong前后无空格，后者有空格。（啦strong啦啦，啦 strong 啦）</p>\n<blockquote>\n<ol start=\"9\">\n<li>注释<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 注释</span><br><span class=\"line\">//- 注释不输出，即不会出现在结果中</span><br><span class=\"line\">// </span><br><span class=\"line\">    块注释</span><br><span class=\"line\">    继续写块注释</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</blockquote>\n<p>ps： 所有以 &lt; 开头的行都会被当作纯文本，因此直接写一个 HTML 风格的条件注释也是没问题的<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--[if IE 8]&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en&quot; class=&quot;lt-ie9&quot;&gt;</span><br><span class=\"line\">&lt;![endif]--&gt;</span><br><span class=\"line\">&lt;!--[if gt IE 8]&gt;&lt;!--&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;!--&lt;![endif]--&gt;</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<ol start=\"10\">\n<li>使用=或#{}来进行变量的真实值替换<br>在 #{ 和 } 里面的代码也会被求值、转义，并最终嵌入到模板的渲染输出中.Pug 足够聪明来分辨到底哪里才是嵌入表达式的结束，所以不用担心表达式中有 }，也不需要额外的转义;使用!{}嵌入没有转义的文本进入模板中</li>\n</ol>\n</blockquote>\n<h2 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h2><p>变量来源有三种，分别是pug文件内部、命令行参数和外部JSON文件。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 文件内部</span><br><span class=\"line\">-var val = &quot;aaaa&quot;;</span><br><span class=\"line\">p= val</span><br><span class=\"line\"></span><br><span class=\"line\">// 命令行</span><br><span class=\"line\">pug test.pug -P -w --obj &apos;&#123;val: &quot;fldasj&quot;&#125;&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">// 外部json文件</span><br><span class=\"line\">pug test.pug -P -w -O test.json</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"include\"><a href=\"#include\" class=\"headerlink\" title=\"include\"></a>include</h2><p>包含（include）功能允许把另外的文件内容插入进来,被包含的如果不是 Pug 文件，那么就只会当作文本内容来引入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//- index.pug</span><br><span class=\"line\">doctype html</span><br><span class=\"line\">html</span><br><span class=\"line\">  include includes/head.pug</span><br><span class=\"line\">  body</span><br><span class=\"line\">    h1 我的网站</span><br><span class=\"line\">    p 欢迎来到我这简陋得不能再简陋的网站。</span><br><span class=\"line\">    include includes/foot.pug</span><br><span class=\"line\"></span><br><span class=\"line\">//- includes/head.pug</span><br><span class=\"line\">head</span><br><span class=\"line\">  title 我的网站</span><br><span class=\"line\">  script(src=&apos;/javascripts/jquery.js&apos;)</span><br><span class=\"line\">  script(src=&apos;/javascripts/app.js&apos;)</span><br><span class=\"line\">  </span><br><span class=\"line\">//- includes/foot.pug</span><br><span class=\"line\">footer#footer</span><br><span class=\"line\">  p Copyright (c) foobar</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"继承\"><a href=\"#继承\" class=\"headerlink\" title=\"继承\"></a>继承</h2><p>Pug 支持使用 block 和 extends 关键字进行模板的继承。一个称之为“块”（block）的代码块，可以被子模板覆盖、替换。这个过程是递归的。   </p>\n<pre><code class=\"jade\">复制代码\n//- layout.pug\nhtml\n  head\n　　 meta(charset=&quot;UTF-8&quot;)\n    title 我的站点 - #{title}\n    block scripts\n      script(src=&apos;/jquery.js&apos;)\n  body\n    block content\n    block foot\n      #footer\n        p 一些页脚的内容\n\n//- page-a.pug\nextends layout.pug\n\nblock scripts\n  script(src=&apos;/jquery.js&apos;)\n  script(src=&apos;/pets.js&apos;)\n\nblock content\n  h1= title\n  - var pets = [&apos;猫&apos;, &apos;狗&apos;]\n  each petName in pets\n    include pet.pug\n\n//- pet.pug\np= petName  // 或者 p #{petName}\n</code></pre>\n<p>值得注意的是，因为这里的 foot 块 没有 被重定义，所以会依然输出“一些页脚的内容”  </p>\n<h2 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"扩展\"></a>扩展</h2><p>Pug 允许去替换（默认的行为）、prepend（向头部添加内容），或者 append（向尾部添加内容）一个块。</p>\n<p><strong><code>参考文献：</code></strong>   <a href=\"https://www.cnblogs.com/xiaohuochai/p/7222227.html\" target=\"_blank\" rel=\"noopener\">jade</a></p>\n"},{"title":"Mobro, my blog","date":"2018-05-17T11:11:11.000Z","_content":"\n## my first blog\n关注我哦\n","source":"_posts/Mobro-my-blog.md","raw":"---\ntitle: 'Mobro, my blog'\ndate: 2018-05-17 19:11:11\ntags: mobro, 啦啦\n---\n\n## my first blog\n关注我哦\n","slug":"Mobro-my-blog","published":1,"updated":"2018-05-17T11:13:52.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhahtne70001h7s6ebaxx6ge","content":"<h2 id=\"my-first-blog\"><a href=\"#my-first-blog\" class=\"headerlink\" title=\"my first blog\"></a>my first blog</h2><p>关注我哦</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"my-first-blog\"><a href=\"#my-first-blog\" class=\"headerlink\" title=\"my first blog\"></a>my first blog</h2><p>关注我哦</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjhahtndy0000h7s6ghszo14x","tag_id":"cjhahtnea0002h7s6urlsx70p","_id":"cjhahtned0004h7s689iwb85e"},{"post_id":"cjhahtne70001h7s6ebaxx6ge","tag_id":"cjhahtnec0003h7s6b3wmrimy","_id":"cjhahtnee0005h7s6m16tpso4"}],"Tag":[{"name":"前端 jade","_id":"cjhahtnea0002h7s6urlsx70p"},{"name":"mobro, 啦啦","_id":"cjhahtnec0003h7s6b3wmrimy"}]}}